from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import os

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = 1932862650
WEBAPP_URL = "https://—Ç–≤–æ–π-—Å–µ—Ä–≤–∏—Å.onrender.com"  # —Å—é–¥–∞ Render –≤—ã–¥–∞—Å—Ç —Å—Å—ã–ª–∫—É

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# üì¶ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –∫–ª—é—á–µ–π (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–≤–æ–π –ø—Ä–æ—à–ª—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª)
@dp.message_handler(lambda m: m.text.isdigit())
async def give_keys(message: types.Message):
    count = int(message.text)
    try:
        with open("keys.txt", "r", encoding="utf-8") as f:
            keys = [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        keys = []

    if count <= 0:
        return await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")

    if len(keys) < count:
        return await message.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ")

    # –≤—ã–¥–∞—ë–º –∫–ª—é—á–∏
    to_send = keys[:count]
    keys = keys[count:]

    with open("keys.txt", "w", encoding="utf-8") as f:
        f.write("\n".join(keys))

    await message.answer("\n".join(to_send))
    await message.answer(f"üì¶ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ: {len(keys)}")

# üîë –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@dp.message_handler(commands=["panel"])
async def open_panel(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏")

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = types.KeyboardButton(
        text="–û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å",
        web_app=types.WebAppInfo(url=WEBAPP_URL)
    )
    keyboard.add(button)
    await message.answer("–û—Ç–∫—Ä–æ–π –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è üëá", reply_markup=keyboard)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
